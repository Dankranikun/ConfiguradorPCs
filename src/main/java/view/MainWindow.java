/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import controller.ComponentController;
import dao.ReportDataSource;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.net.URL;
import java.nio.file.Paths;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.help.HelpBroker;
import javax.help.HelpSet;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComponent;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.KeyStroke;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
import util.DatabaseConnection;

/**
 *
 * @author nicop
 */
public class MainWindow extends javax.swing.JFrame {

    private static final int ROWS_PER_PAGE = 14; // Número de filas por página
    private int currentPage = 0;
    private HelpSet helpSet;
    private HelpBroker helpBroker;

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        initPaginationControls();
        loadData();
        initHelp();
        ejecutarF1();

        // Agregar ListSelectionListener a la tabla
        table.getSelectionModel().addListSelectionListener(event -> {
            if (!event.getValueIsAdjusting()) { // Evitar múltiples eventos durante la selección
                int selectedRow = table.getSelectedRow();
                if (selectedRow != -1) { // Verificar que hay una fila seleccionada
                    // Obtener los datos de la fila seleccionada (ajustar índices según loadData())
                    Object idObj = table.getValueAt(selectedRow, 0); // "ID"
                    String usuario = (String) table.getValueAt(selectedRow, 1); // "Usuario"
                    String ram = (String) table.getValueAt(selectedRow, 2);     // "RAM"
                    String cpu = (String) table.getValueAt(selectedRow, 3);     // "CPU"
                    String gpu = (String) table.getValueAt(selectedRow, 4);     // "GPU"
                    String motherboard = (String) table.getValueAt(selectedRow, 5); // "Motherboard"
                    String psu = (String) table.getValueAt(selectedRow, 6);     // "PSU"
                    String disco = (String) table.getValueAt(selectedRow, 7);   // "Disco"

                    // Asignar los valores a los campos de texto renombrados
                    tfBuild.setText(idObj != null ? idObj.toString() : "");    // "ID" como identificador de Build
                    tfUser.setText(usuario != null ? usuario : "");            // "Usuario" como User
                    tfRam.setText(ram != null ? ram : "");                    // "RAM"
                    tfCpu.setText(cpu != null ? cpu : "");                    // "CPU"
                    tfGpu.setText(gpu != null ? gpu : "");                    // "GPU"
                    tfMobo.setText(motherboard != null ? motherboard : "");    // "Motherboard"
                    tfPsu.setText(psu != null ? psu : "");                    // "PSU"
                    tfDisk.setText(disco != null ? disco : "");               // "Disco"
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AllPane = new javax.swing.JPanel();
        ComponentsPane = new javax.swing.JPanel();
        BuildPane = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tfBuild = new javax.swing.JTextField();
        UserPane = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        tfUser = new javax.swing.JTextField();
        RAMPane = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        tfRam = new javax.swing.JTextField();
        CPUPane = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        tfCpu = new javax.swing.JTextField();
        GPUPane = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        tfGpu = new javax.swing.JTextField();
        MoBoPane = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        tfMobo = new javax.swing.JTextField();
        PSUPane = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        tfPsu = new javax.swing.JTextField();
        DiskPane = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        tfDisk = new javax.swing.JTextField();
        TablePane = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        prevButton = new javax.swing.JButton();
        nextButton = new javax.swing.JButton();
        ButtonsPane = new javax.swing.JPanel();
        saveButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        reportButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jmAddUser = new javax.swing.JMenuItem();
        jmAddPC = new javax.swing.JMenuItem();
        jmComponent = new javax.swing.JMenuItem();
        jmClear = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        miGuide = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        AllPane.setLayout(new java.awt.BorderLayout());

        ComponentsPane.setPreferredSize(new java.awt.Dimension(720, 167));
        ComponentsPane.setLayout(new java.awt.GridLayout(2, 0, 3, 3));

        BuildPane.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setText("Build⤵");

        tfBuild.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfBuildActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BuildPaneLayout = new javax.swing.GroupLayout(BuildPane);
        BuildPane.setLayout(BuildPaneLayout);
        BuildPaneLayout.setHorizontalGroup(
            BuildPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BuildPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BuildPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BuildPaneLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(tfBuild, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE))
                .addContainerGap())
        );
        BuildPaneLayout.setVerticalGroup(
            BuildPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BuildPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfBuild, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ComponentsPane.add(BuildPane);

        UserPane.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        UserPane.setPreferredSize(new java.awt.Dimension(116, 82));

        jLabel2.setText("User⤵");

        javax.swing.GroupLayout UserPaneLayout = new javax.swing.GroupLayout(UserPane);
        UserPane.setLayout(UserPaneLayout);
        UserPaneLayout.setHorizontalGroup(
            UserPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(UserPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(UserPaneLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(tfUser, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE))
                .addContainerGap())
        );
        UserPaneLayout.setVerticalGroup(
            UserPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ComponentsPane.add(UserPane);

        RAMPane.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        RAMPane.setPreferredSize(new java.awt.Dimension(116, 82));

        jLabel3.setText("RAM⤵");

        tfRam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfRamActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout RAMPaneLayout = new javax.swing.GroupLayout(RAMPane);
        RAMPane.setLayout(RAMPaneLayout);
        RAMPaneLayout.setHorizontalGroup(
            RAMPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RAMPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(RAMPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(RAMPaneLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(tfRam, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE))
                .addContainerGap())
        );
        RAMPaneLayout.setVerticalGroup(
            RAMPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RAMPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfRam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ComponentsPane.add(RAMPane);

        CPUPane.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        CPUPane.setPreferredSize(new java.awt.Dimension(116, 82));

        jLabel5.setText("CPU⤵");

        javax.swing.GroupLayout CPUPaneLayout = new javax.swing.GroupLayout(CPUPane);
        CPUPane.setLayout(CPUPaneLayout);
        CPUPaneLayout.setHorizontalGroup(
            CPUPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CPUPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CPUPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CPUPaneLayout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(tfCpu, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE))
                .addContainerGap())
        );
        CPUPaneLayout.setVerticalGroup(
            CPUPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CPUPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfCpu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ComponentsPane.add(CPUPane);

        GPUPane.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        GPUPane.setPreferredSize(new java.awt.Dimension(116, 82));

        jLabel6.setText("GPU⤵");

        javax.swing.GroupLayout GPUPaneLayout = new javax.swing.GroupLayout(GPUPane);
        GPUPane.setLayout(GPUPaneLayout);
        GPUPaneLayout.setHorizontalGroup(
            GPUPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GPUPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(GPUPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(GPUPaneLayout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(tfGpu, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE))
                .addContainerGap())
        );
        GPUPaneLayout.setVerticalGroup(
            GPUPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GPUPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfGpu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ComponentsPane.add(GPUPane);

        MoBoPane.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        MoBoPane.setPreferredSize(new java.awt.Dimension(116, 82));

        jLabel7.setText("Motherboard⤵");

        javax.swing.GroupLayout MoBoPaneLayout = new javax.swing.GroupLayout(MoBoPane);
        MoBoPane.setLayout(MoBoPaneLayout);
        MoBoPaneLayout.setHorizontalGroup(
            MoBoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoBoPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MoBoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfMobo)
                    .addGroup(MoBoPaneLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(0, 87, Short.MAX_VALUE)))
                .addContainerGap())
        );
        MoBoPaneLayout.setVerticalGroup(
            MoBoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoBoPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfMobo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ComponentsPane.add(MoBoPane);

        PSUPane.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        PSUPane.setPreferredSize(new java.awt.Dimension(116, 82));

        jLabel8.setText("PSU⤵");

        javax.swing.GroupLayout PSUPaneLayout = new javax.swing.GroupLayout(PSUPane);
        PSUPane.setLayout(PSUPaneLayout);
        PSUPaneLayout.setHorizontalGroup(
            PSUPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PSUPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PSUPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfPsu)
                    .addGroup(PSUPaneLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(0, 136, Short.MAX_VALUE)))
                .addContainerGap())
        );
        PSUPaneLayout.setVerticalGroup(
            PSUPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PSUPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfPsu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ComponentsPane.add(PSUPane);

        DiskPane.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        DiskPane.setPreferredSize(new java.awt.Dimension(116, 82));

        jLabel9.setText("Disk⤵");

        javax.swing.GroupLayout DiskPaneLayout = new javax.swing.GroupLayout(DiskPane);
        DiskPane.setLayout(DiskPaneLayout);
        DiskPaneLayout.setHorizontalGroup(
            DiskPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DiskPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DiskPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfDisk, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                    .addGroup(DiskPaneLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        DiskPaneLayout.setVerticalGroup(
            DiskPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DiskPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfDisk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ComponentsPane.add(DiskPane);

        AllPane.add(ComponentsPane, java.awt.BorderLayout.CENTER);

        TablePane.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        TablePane.setPreferredSize(new java.awt.Dimension(740, 268));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Build", "User", "RAM", "CPU", "GPU", "Motherboard", "PSU", "Disk"
            }
        ));
        jScrollPane1.setViewportView(table);

        prevButton.setText("🔼");
        prevButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevButtonActionPerformed(evt);
            }
        });

        nextButton.setText("🔽");
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TablePaneLayout = new javax.swing.GroupLayout(TablePane);
        TablePane.setLayout(TablePaneLayout);
        TablePaneLayout.setHorizontalGroup(
            TablePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TablePaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 669, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TablePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(prevButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nextButton, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE))
                .addContainerGap())
        );
        TablePaneLayout.setVerticalGroup(
            TablePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TablePaneLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(TablePaneLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(prevButton, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(nextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        AllPane.add(TablePane, java.awt.BorderLayout.PAGE_START);

        saveButton.setText("Save edit");

        deleteButton.setText("Delete build");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        resetButton.setText("Discard changes");

        reportButton.setText("Generate report");
        reportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ButtonsPaneLayout = new javax.swing.GroupLayout(ButtonsPane);
        ButtonsPane.setLayout(ButtonsPaneLayout);
        ButtonsPaneLayout.setHorizontalGroup(
            ButtonsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ButtonsPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(saveButton)
                .addGap(18, 18, 18)
                .addComponent(deleteButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(reportButton)
                .addGap(18, 18, 18)
                .addComponent(resetButton)
                .addContainerGap())
        );
        ButtonsPaneLayout.setVerticalGroup(
            ButtonsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ButtonsPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ButtonsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton)
                    .addComponent(deleteButton)
                    .addComponent(resetButton)
                    .addComponent(reportButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu1.setText("Options");

        jmAddUser.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jmAddUser.setText("Add new user");
        jmAddUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmAddUserActionPerformed(evt);
            }
        });
        jMenu1.add(jmAddUser);

        jmAddPC.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jmAddPC.setText("Add new PC");
        jmAddPC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmAddPCActionPerformed(evt);
            }
        });
        jMenu1.add(jmAddPC);

        jmComponent.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jmComponent.setText("Add new Component");
        jmComponent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmComponentActionPerformed(evt);
            }
        });
        jMenu1.add(jmComponent);

        jmClear.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        jmClear.setText("Clear fields");
        jmClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmClearActionPerformed(evt);
            }
        });
        jMenu1.add(jmClear);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");

        miGuide.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        miGuide.setText("Guide");
        miGuide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miGuideActionPerformed(evt);
            }
        });
        jMenu2.add(miGuide);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(AllPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ButtonsPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(AllPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonsPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void miGuideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miGuideActionPerformed
        if (helpBroker != null) {
            helpBroker.setDisplayed(true);
        } else {
            System.out.println("El sistema de ayuda no está disponible.");
        }
    }//GEN-LAST:event_miGuideActionPerformed

    private void jmClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmClearActionPerformed
        tfBuild.setText(null);
        tfUser.setText(null);
        tfRam.setText(null);
        tfCpu.setText(null);
        tfGpu.setText(null);
        tfMobo.setText(null);
        tfPsu.setText(null);
        tfDisk.setText(null);
    }//GEN-LAST:event_jmClearActionPerformed

    private void tfBuildActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfBuildActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfBuildActionPerformed

    private void tfRamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfRamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfRamActionPerformed

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        currentPage++;
        loadData();

    }//GEN-LAST:event_nextButtonActionPerformed

    private void prevButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevButtonActionPerformed
        if (currentPage > 0) {
            currentPage--;
            loadData();
        }
    }//GEN-LAST:event_prevButtonActionPerformed

    private void jmComponentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmComponentActionPerformed
        AddComponentWindow addWindow = new AddComponentWindow(this); // 'this' es MainWindow
        addWindow.setVisible(true); // Mostrar la ventana modal
    }//GEN-LAST:event_jmComponentActionPerformed

    private void jmAddUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmAddUserActionPerformed
        NewUserWindow newUser = new NewUserWindow();
        newUser.setVisible(true);
    }//GEN-LAST:event_jmAddUserActionPerformed

    private void reportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportButtonActionPerformed
        ReportWindow reportWindow = new ReportWindow(this);
        reportWindow.showDialog();
    }//GEN-LAST:event_reportButtonActionPerformed

    private void jmAddPCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmAddPCActionPerformed
        CreateBuildWindow createBuild = new CreateBuildWindow();
        createBuild.setVisible(true);
    }//GEN-LAST:event_jmAddPCActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    private void loadData() {
        DefaultTableModel model = new DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "ID", "Usuario", "RAM", "CPU", "GPU", "Motherboard", "PSU", "Disco"
                }
        );
        table.setModel(model); // Sobrescribe el modelo del JTable

        // Calcular el offset para la página actual
        int offset = currentPage * ROWS_PER_PAGE;

        try (Connection conn = DatabaseConnection.getConnection(); PreparedStatement stmt = conn.prepareStatement(
                "SELECT "
                + "    c.id, "
                + "    u.nombre AS usuario, "
                + "    r.marca || ' ' || r.modelo AS ram, "
                + "    cpu.marca || ' ' || cpu.modelo AS cpu, "
                + "    g.marca || ' ' || g.modelo AS gpu, "
                + "    m.marca || ' ' || m.modelo AS motherboard, "
                + "    p.marca || ' ' || p.modelo AS psu, "
                + "    d.marca || ' ' || d.modelo AS disco "
                + "FROM configuraciones c "
                + "INNER JOIN usuarios u ON c.usuario_id = u.id "
                + "LEFT JOIN ram r ON c.ram_id = r.id "
                + "LEFT JOIN cpu ON c.cpu_id = cpu.id "
                + "LEFT JOIN gpu g ON c.gpu_id = g.id "
                + "LEFT JOIN motherboard m ON c.motherboard_id = m.id "
                + "LEFT JOIN psu p ON c.psu_id = p.id "
                + "LEFT JOIN discos d ON c.disco_id = d.id "
                + "LIMIT ? OFFSET ?")) {

            stmt.setInt(1, ROWS_PER_PAGE); // Límite de filas por página
            stmt.setInt(2, offset); // Desplazamiento para la página actual
            ResultSet rs = stmt.executeQuery();

            int rowCount = 0;
            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getInt("id"),
                    rs.getString("usuario"),
                    rs.getString("ram") != null ? rs.getString("ram") : "N/A",
                    rs.getString("cpu") != null ? rs.getString("cpu") : "N/A",
                    rs.getString("gpu") != null ? rs.getString("gpu") : "Integrated",
                    rs.getString("motherboard") != null ? rs.getString("motherboard") : "N/A",
                    rs.getString("psu") != null ? rs.getString("psu") : "N/A",
                    rs.getString("disco") != null ? rs.getString("disco") : "N/A"
                });
                rowCount++;
            }

            // Deshabilitar el botón "Siguiente" si no hay más datos
            nextButton.setEnabled(rowCount == ROWS_PER_PAGE);
            // Deshabilitar el botón "Anterior" si estamos en la primera página
            prevButton.setEnabled(currentPage > 0);

        } catch (SQLException e) {
            System.err.println("Error al cargar datos: " + e.getMessage());
        }
    }

    private void cargarPagina(int pagina) {
        try {
            ComponentController controller = new ComponentController();
            List<Map<String, Object>> cpus = controller.obtenerCpus(pagina);
            DefaultTableModel model = (DefaultTableModel) table.getModel(); // Ajustado a tu variable "table"
            model.setRowCount(0);
            for (Map<String, Object> cpu : cpus) {
                model.addRow(new Object[]{
                    cpu.get("marca"),
                    cpu.get("modelo"),
                    cpu.get("nucleos"),
                    cpu.get("hilos"),
                    cpu.get("frecuencia"),
                    cpu.get("socket"),
                    cpu.get("año_lanzamiento"),
                    cpu.get("consumo_energetico")
                });
            }
            // Habilitar/deshabilitar botones de paginación
            prevButton.setEnabled(pagina > 0);
            nextButton.setEnabled(cpus.size() == 10); // Si hay 10 registros, puede haber más páginas
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error al cargar componentes: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void initPaginationControls() {
        // Crear panel para los botones de paginación
        JPanel paginationPanel = new JPanel();
        prevButton = new JButton("Anterior");
        nextButton = new JButton("Siguiente");

        // Añadir listeners a los botones
        prevButton.addActionListener(e -> {
            if (currentPage > 0) {
                currentPage--;
                loadData();
            }
        });

        nextButton.addActionListener(e -> {
            currentPage++;
            loadData();
        });
    }

    private void initHelp() {
        try {
            // Obtener el recurso desde el classpath
            ClassLoader cl = this.getClass().getClassLoader();
            URL hsURL = cl.getResource("help/help_set.hs");

            if (hsURL == null) {
                System.out.println("No se encontró el archivo de ayuda en el classpath.");
                return;
            }

            System.out.println("Archivo de ayuda encontrado en: " + hsURL);

            // Cargar el HelpSet
            helpSet = new HelpSet(cl, hsURL);
            helpBroker = helpSet.createHelpBroker();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void ejecutarF1() {
        KeyStroke f1KeyStroke = KeyStroke.getKeyStroke("F1");
        Action helpAction = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                miGuideActionPerformed(null); // Ejecuta el mismo evento del botón
            }
        };

        // Asignar la acción al panel principal (ventana) para que funcione en cualquier parte
        this.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(f1KeyStroke, "help");
        this.getRootPane().getActionMap().put("help", helpAction);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AllPane;
    private javax.swing.JPanel BuildPane;
    private javax.swing.JPanel ButtonsPane;
    private javax.swing.JPanel CPUPane;
    private javax.swing.JPanel ComponentsPane;
    private javax.swing.JPanel DiskPane;
    private javax.swing.JPanel GPUPane;
    private javax.swing.JPanel MoBoPane;
    private javax.swing.JPanel PSUPane;
    private javax.swing.JPanel RAMPane;
    private javax.swing.JPanel TablePane;
    private javax.swing.JPanel UserPane;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem jmAddPC;
    private javax.swing.JMenuItem jmAddUser;
    private javax.swing.JMenuItem jmClear;
    private javax.swing.JMenuItem jmComponent;
    private javax.swing.JMenuItem miGuide;
    private javax.swing.JButton nextButton;
    private javax.swing.JButton prevButton;
    private javax.swing.JButton reportButton;
    private javax.swing.JButton resetButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JTable table;
    private javax.swing.JTextField tfBuild;
    private javax.swing.JTextField tfCpu;
    private javax.swing.JTextField tfDisk;
    private javax.swing.JTextField tfGpu;
    private javax.swing.JTextField tfMobo;
    private javax.swing.JTextField tfPsu;
    private javax.swing.JTextField tfRam;
    private javax.swing.JTextField tfUser;
    // End of variables declaration//GEN-END:variables
}
